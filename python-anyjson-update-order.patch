--- anyjson-0.3.3/anyjson/__init__.py	2017-02-10 14:45:17.898510326 -0800
+++ anyjson-0.3.3/anyjson/__init__.py.new	2017-02-10 14:45:27.501549767 -0800
@@ -32,12 +32,9 @@
 #: methods, as well as the exceptions they throw.  Exception can be either
 #: an exception class or a string.
 _modules = [("yajl", "dumps", TypeError, "loads", ValueError, "load"),
-            ("jsonlib2", "write", "WriteError", "read", "ReadError", None),
-            ("jsonlib", "write", "WriteError", "read", "ReadError", None),
+            ("cjson", "encode", "EncodeError", "decode", "DecodeError", None),
             ("simplejson", "dumps", TypeError, "loads", ValueError, "load"),
             ("json", "dumps", TypeError, "loads", ValueError, "load"),
-            ("django.utils.simplejson", "dumps", TypeError, "loads", ValueError, "load"),
-            ("cjson", "encode", "EncodeError", "decode", "DecodeError", None)
            ]
 
 _fields = ("modname", "encoder", "encerror",
@@ -50,10 +47,6 @@
     def __init__(self, modspec):
         modinfo = dict(zip(_fields, modspec))
 
-        if modinfo["modname"] == "cjson":
-            import warnings
-            warnings.warn("cjson is deprecated! See http://pypi.python.org/pypi/python-cjson/1.0.5", DeprecationWarning)
-
         # No try block. We want importerror to end up at caller
         module = self._attempt_load(modinfo["modname"])
 
